# Realizando a operação
auxiliar_vector <- c(auxiliar_vector, operation(coluna[,]))
}
return(auxiliar_vector)
}
# Construindo a função de cálculo de moda
moda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Construindo a função de cálculo de amplitude
amplitude <- function(v) {
max(v) - min(v)
}
# Construindo a função de cálculo do erro padrão
erro_padrao <- function(v) {
desv_pad/sqrt(length(v))
}
linhas <- colnames(amostra)
media <- funcao_geral(mean)
mediana <- funcao_geral(median)
moda <- funcao_geral(moda)
desv_pad <- funcao_geral(sd)
variancia <- funcao_geral(var)
err_pad <- funcao_geral(erro_padrao)
erro_padrao <- function(v) {
sd(v)/sqrt(length(v))
}
err_pad <- funcao_geral(erro_padrao)
amp <- funcao_geral(amplitude)
# Análise de uma base de dados
# Importação do dataset
dataset_list <- read.csv(file = "c:/Users/Usuario/Documents/Estudos/Data Science e Programação/Spotify API/playlists_songs_clusters.csv")
dataset <- as.data.frame(dataset_list)
# Selecionando uma amostra aleatória de 50 observações
amostra = dataset[sample(nrow(dataset), 50), ]
# Eliminando o atributo categórico
amostra$genre <- NULL
amostra$X <- NULL
# Construindo a função que irá realizar operações em cada coluna do dataset
funcao_geral <- function(operation){
# Criando o vetor de armazenamento dos resultados
auxiliar_vector <- c()
for (element in colnames(amostra)) {
# Selecionando a coluna de interesse
coluna <- amostra[element]
# Realizando a operação
auxiliar_vector <- c(auxiliar_vector, operation(coluna[,]))
}
return(auxiliar_vector)
}
# Construindo a função de cálculo de moda
moda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Construindo a função de cálculo de amplitude
amplitude <- function(v) {
max(v) - min(v)
}
# Construindo a função de cálculo do erro padrão
erro_padrao <- function(v) {
sd(v)/sqrt(length(v))
}
# Construindo o dataset com as medidas
medidas <- c("Média", "Mediana", "Moda", "Desvio Padrão", "Variância", "Erro Padrão", "Amplitude")
linhas <- colnames(amostra)
media <- funcao_geral(mean)
mediana <- funcao_geral(median)
moda <- funcao_geral(moda)
desv_pad <- funcao_geral(sd)
variancia <- funcao_geral(var)
err_pad <- funcao_geral(erro_padrao)
amp <- funcao_geral(amplitude)
dataframe <- data.frame(linhas, media, mediana, moda, desv_pad, variancia, err_pad, amp)
dataframe
colnames(dataframe) <- medidas
dataframe
# Análise de uma base de dados
# Importação do dataset
dataset_list <- read.csv(file = "c:/Users/Usuario/Documents/Estudos/Data Science e Programação/Spotify API/playlists_songs_clusters.csv")
dataset <- as.data.frame(dataset_list)
# Selecionando uma amostra aleatória de 50 observações
amostra = dataset[sample(nrow(dataset), 50), ]
# Eliminando o atributo categórico
amostra$genre <- NULL
amostra$X <- NULL
# Construindo a função que irá realizar operações em cada coluna do dataset
funcao_geral <- function(operation){
# Criando o vetor de armazenamento dos resultados
auxiliar_vector <- c()
for (element in colnames(amostra)) {
# Selecionando a coluna de interesse
coluna <- amostra[element]
# Realizando a operação
auxiliar_vector <- c(auxiliar_vector, operation(coluna[,]))
}
return(auxiliar_vector)
}
# Construindo a função de cálculo de moda
moda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Construindo a função de cálculo de amplitude
amplitude <- function(v) {
max(v) - min(v)
}
# Construindo a função de cálculo do erro padrão
erro_padrao <- function(v) {
sd(v)/sqrt(length(v))
}
# Construindo o dataset com as medidas
medidas <- c("Média", "Mediana", "Moda", "Desvio Padrão", "Variância", "Erro Padrão", "Amplitude")
features <- colnames(amostra)
media <- funcao_geral(mean)
mediana <- funcao_geral(median)
moda <- funcao_geral(moda)
desv_pad <- funcao_geral(sd)
variancia <- funcao_geral(var)
err_pad <- funcao_geral(erro_padrao)
amp <- funcao_geral(amplitude)
dataframe <- data.frame(linhas, media, mediana, moda, desv_pad, variancia, err_pad, amp)
colnames(dataframe) <- medidas
library(tidyr)
library(ggplot2)
# Construindo o histograma
dataframe %>% gather() %>% head()
# Construindo o histograma
dataframe %>% gather()
dataframe
# Análise de uma base de dados
# Importação das bibliotecas
library(tidyr)
library(ggplot2)
# Importação do dataset
dataset_list <- read.csv(file = "c:/Users/Usuario/Documents/Estudos/Data Science e Programação/Spotify API/playlists_songs_clusters.csv")
dataset <- as.data.frame(dataset_list)
# Selecionando uma amostra aleatória de 50 observações
amostra = dataset[sample(nrow(dataset), 50), ]
# Eliminando o atributo categórico
amostra$genre <- NULL
amostra$X <- NULL
# Construindo a função que irá realizar operações em cada coluna do dataset
funcao_geral <- function(operation){
# Criando o vetor de armazenamento dos resultados
auxiliar_vector <- c()
for (element in colnames(amostra)) {
# Selecionando a coluna de interesse
coluna <- amostra[element]
# Realizando a operação
auxiliar_vector <- c(auxiliar_vector, operation(coluna[,]))
}
return(auxiliar_vector)
}
# Construindo a função de cálculo de moda
moda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Construindo a função de cálculo de amplitude
amplitude <- function(v) {
max(v) - min(v)
}
# Construindo a função de cálculo do erro padrão
erro_padrao <- function(v) {
sd(v)/sqrt(length(v))
}
# Construindo o dataset com as medidas
medidas <- c("Features", "Média", "Mediana", "Moda", "Desvio Padrão", "Variância", "Erro Padrão", "Amplitude")
features <- colnames(amostra)
media <- funcao_geral(mean)
mediana <- funcao_geral(median)
moda <- funcao_geral(moda)
desv_pad <- funcao_geral(sd)
variancia <- funcao_geral(var)
err_pad <- funcao_geral(erro_padrao)
amp <- funcao_geral(amplitude)
dataframe <- data.frame(linhas, media, mediana, moda, desv_pad, variancia, err_pad, amp)
colnames(dataframe) <- medidas
# Construindo o histograma
dataframe %>% gather()
ggplot(gather(dataframe), aes(value)) +
geom_histogram(bins = 20) +
facet_wrap(~key, scales = 'free_x')
dataframe %>% gather()
dataframe[2: ,] %>% gather()
ggplot(gather(dataframe), aes(value)) +
geom_histogram(bins = 20) +
facet_wrap(~key, scales = 'free_x')
dataframe[2: ,]
dataframe[c(2: ),]
dataframe[,(2:)]
dataframe[,(2: )]
dataframe[, 2:-1]
dataframe[2:]
tail(dataframe, -2)
dataframe_hist <- dataframe
dataframe_hist$Features <- NULL
dataframe_hist
dataframe
dataframe_hist
dataframe_hist %>% gather()
ggplot(gather(dataframe_hist), aes(value)) +
geom_histogram(bins = 20) +
facet_wrap(~key, scales = 'free_x')
dataframe_hist %>% gather()
ggplot(gather(dataframe_hist), aes(value)) +
geom_histogram(bins = 10) +
facet_wrap(~key, scales = 'free_x')
amostra
amostra %>% gather()
ggplot(gather(amostra), aes(value)) +
geom_histogram(bins = 10) +
facet_wrap(~key, scales = 'free_x')
install.packages(gridExtra)
install.packages('gridExtra')
library(gridExtra)
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset.png", height = 50*nrow(amostra), width = 200*ncol(amostra))
grid.table(amostra)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset.png", height = 2*nrow(amostra), width = 2*ncol(amostra))
grid.table(amostra)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset.png", height = 20*nrow(amostra), width = 100*ncol(amostra))
grid.table(amostra)
dev.off()
row.names(amostra) <- NULL
amostra
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset.png", height = 30*nrow(amostra), width = 80*ncol(amostra))
grid.table(amostra)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset.png", height = 25*nrow(amostra), width = 80*ncol(amostra))
grid.table(amostra)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset.png", height = 23*nrow(amostra), width = 75*ncol(amostra))
grid.table(amostra)
dev.off()
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Aula_01_Atividade_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Aula_01_Atividade_2.R', encoding = 'UTF-8', echo=TRUE)
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset_medidas.png", height = 50*nrow(dataframe), width = 120*ncol(dataframe))
grid.table(dataframe)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset_medidas.png", height = 50*nrow(dataframe), width = 120*ncol(dataframe))
grid.table(dataframe)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset_medidas.png", height = 30*nrow(dataframe), width = 100*ncol(dataframe))
grid.table(dataframe)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset_medidas.png", height = 30*nrow(dataframe), width = 100*ncol(dataframe))
grid.table(dataframe)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset_medidas.png", height = 28*nrow(dataframe), width = 100*ncol(dataframe))
grid.table(dataframe)
dev.off()
png("c:/Users/Usuario/Documents/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Documentos/dataset_medidas.png", height = 25*nrow(dataframe), width = 100*ncol(dataframe))
grid.table(dataframe)
dev.off()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(dataset_1)
View(dataset_1)
dataset_2 <- t(as.matrix(dataset_1))
View(dataset_2)
dataset_2 <- as.data.frame(t(as.matrix(dataset_1)))
View(dataset_2)
View(dataset_1)
View(dataset_1)
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[2:6, 2:4])))
View(dataset_2)
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:4, 2:6])))
View(dataset_2)
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:4, 1:6])))
View(dataset_2)
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:4, 2:6])))
View(dataset_2)
colnames(dataset_2) <- c("A", "B", "C", "D")
View(dataset_2)
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Aula_02_Atividade_1.R', encoding = 'UTF-8', echo=TRUE)
View(dataset_box_2)
View(dataset_2)
# Criando o dataset_1
dataset_1 <- data.frame("Variedades" = c("A", "B", "C", "D"),
"R1" = c(25, 31, 22, 33),
"R2" = c(26, 25, 26, 29),
"R3" = c(20, 28, 28, 31),
"R4" = c(23, 27, 25, 34),
"R5" = c(21, 24, 29, 28))
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:4, 2:6])))
colnames(dataset_2) <- c("A", "B", "C", "D")
View(dataset_2)
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Aula_02_Atividade_1.R', encoding = 'UTF-8', echo=TRUE)
View(dataset_2)
# Criando o dataset_1
dataset_1 <- data.frame("Variedades" = c("A", "B", "C", "D"),
"R1" = c(25, 31, 22, 33),
"R2" = c(26, 25, 26, 29),
"R3" = c(20, 28, 28, 31),
"R4" = c(23, 27, 25, 34),
"R5" = c(21, 24, 29, 28))
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:4, 2:6])))
colnames(dataset_2) <- c("A", "B", "C", "D")
View(dataset_2)
# Criando o dataset_1
dataset_1 <- data.frame("Variedades" = c("A", "B", "C", "D"),
"R1" = c(25, 31, 22, 33),
"R2" = c(26, 25, 26, 29),
"R3" = c(20, 28, 28, 31),
"R4" = c(23, 27, 25, 34),
"R5" = c(21, 24, 29, 28))
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:4, 2:6])))
colnames(dataset_2) <- c("A", "B", "C", "D")
# Preparando os dados para gerar o boxplot
r1_label <- replicate(4, "R1")
r2_label <- replicate(4, "R2")
r3_label <- replicate(4, "R3")
r4_label <- replicate(4, "R4")
r5_label <- replicate(4, "R5")
r1_data <- t(as.matrix(dataset_2[1,1:4]))
r2_data <- t(as.matrix(dataset_2[2,1:4]))
r3_data <- t(as.matrix(dataset_2[3,1:4]))
r4_data <- t(as.matrix(dataset_2[4,1:4]))
r4_data <- t(as.matrix(dataset_2[5,1:4]))
variedades <- c(r1_data, r2_data, r3_data, r4_data, r5_data)
dataset_box_2 <- data.frame("Variedades" = c(r1_label, r2_label, r3_label, r4_label, r5_label), "Dados" = c(variedades))
# Gerando o boxplot
ggplot(dataset_2, aes(x=Variedades, y=Dados)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Variedades")
# Criando o dataset_1
dataset_1 <- data.frame("Variedades" = c("A", "B", "C", "D"),
"R1" = c(25, 31, 22, 33),
"R2" = c(26, 25, 26, 29),
"R3" = c(20, 28, 28, 31),
"R4" = c(23, 27, 25, 34),
"R5" = c(21, 24, 29, 28))
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:4, 2:6])))
colnames(dataset_2) <- c("A", "B", "C", "D")
# Preparando os dados para gerar o boxplot
r1_label <- replicate(4, "R1")
r2_label <- replicate(4, "R2")
r3_label <- replicate(4, "R3")
r4_label <- replicate(4, "R4")
r5_label <- replicate(4, "R5")
r1_data <- t(as.matrix(dataset_2[1,1:4]))
r2_data <- t(as.matrix(dataset_2[2,1:4]))
r3_data <- t(as.matrix(dataset_2[3,1:4]))
r4_data <- t(as.matrix(dataset_2[4,1:4]))
r4_data <- t(as.matrix(dataset_2[5,1:4]))
varied <- c(r1_data, r2_data, r3_data, r4_data, r5_data)
dataset_box_2 <- data.frame("Variedades" = c(r1_label, r2_label, r3_label, r4_label, r5_label), "Dados" = c(varied))
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Variedades")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(fill="slateblue", alpha=0.2) +
xlab("Variedades")
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(aes(color = factor("Variedades"))) +
xlab("Variedades")
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(aes(color = factor("Dados"))) +
xlab("Variedades")
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(aes(color = factor("Dados"))) +
xlab("Variedades")
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Atividade_Avaliativa_1.R', echo=TRUE)
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(size = 2) +
xlab("Variedades")
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(size = 5) +
xlab("Variedades")
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(size = 3) +
xlab("Variedades")
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Atividade_Avaliativa_1.R', echo=TRUE)
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Atividade_Avaliativa_1.R', echo=TRUE)
source('~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos/Atividade_Avaliativa_1.R', echo=TRUE)
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(size = 3, color = "slateblue") +
xlab("Variedades")
ylab("Produção de Soja em kg/100m²")
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_point(size = 3, color = "slateblue") +
xlab("Variedades")+
ylab("Produção de Soja em kg/100m²")
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Variedades")+
ylab("Produção de Soja em kg/100m²")
View(dataset_box_2)
setwd("~/Mestrado/Disciplinas/FT087 - Planejamento e Análise Experimental/Códigos")
dataset_1 <- data.frame("Técnicas" = c("E1", "E2", "E3", "E4", "E5"),
"R1" = c(132, 129, 102, 116, 127),
"R2" = c(142, 102, 91, 149, 113),
"R3" = c(61, 90, 75, 84, 27),
"R4" = c(38, 33, 21, 18, 22))
View(dataset_1)
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:5, 2:5])))
colnames(dataset_2) <- c("E1", "E2", "E3", "E4", "E5")
View(dataset_2)
# Criando o dataset_1
dataset_1 <- data.frame("Técnicas" = c("E1", "E2", "E3", "E4", "E5"),
"A" = c(132, 129, 102, 116, 127),
"B" = c(142, 102, 91, 149, 113),
"C" = c(61, 90, 75, 84, 27),
"D" = c(38, 33, 21, 18, 22))
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:5, 2:5])))
colnames(dataset_2) <- c("E1", "E2", "E3", "E4", "E5")
View(dataset_2)
r1_label <- replicate(5, "A")
r2_label <- replicate(5, "B")
r3_label <- replicate(5, "C")
r4_label <- replicate(5, "D")
r1_data <- t(as.matrix(dataset_2[1,1:5]))
r2_data <- t(as.matrix(dataset_2[2,1:5]))
r3_data <- t(as.matrix(dataset_2[3,1:5]))
r4_data <- t(as.matrix(dataset_2[4,1:5]))
varied <- c(r1_data, r2_data, r3_data, r4_data)
dataset_box_2 <- data.frame("Variedades" = c(r1_label, r2_label, r3_label, r4_label), "Dados" = c(varied))
View(dataset_box_2)
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Técnicas")+
ylab("Falhas")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
View(dataset_2)
# Preparando os dados para gerar o boxplot
r1_label_2 <- replicate(4, "E1")
r2_label_2 <- replicate(4, "E2")
r3_label_2 <- replicate(4, "E3")
r4_label_2 <- replicate(4, "E4")
r5_label_2 <- replicate(4, "E5")
r1_data_2 <- dataset_2[1:4,1])
r2_data_2 <- dataset_2[1:4,2])
r3_data_2 <- dataset_2[1:4,3])
r4_data_2 <- dataset_2[1:4,4])
r5_data_2 <- dataset_2[1:4,5])
varied_2 <- c(r1_data_2, r2_data_2, r3_data_2, r4_data_2, r5_data_2)
dataset_box_2 <- data.frame("Variedades" = c(r1_label_2, r2_label_2, r3_label_2, r4_label_2, r5_label_2), "Dados" = c(varied_2))
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades, y=Dados)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Técnicas")+
ylab("Falhas")
# Importação das Bibliotecas
library(ggplot2)
# Criando o dataset_1
dataset_1 <- data.frame("Técnicas" = c("E1", "E2", "E3", "E4", "E5"),
"A" = c(132, 129, 102, 116, 127),
"B" = c(142, 102, 91, 149, 113),
"C" = c(61, 90, 75, 84, 27),
"D" = c(38, 33, 21, 18, 22))
dataset_2 <- as.data.frame(t(as.matrix(dataset_1[1:5, 2:5])))
colnames(dataset_2) <- c("E1", "E2", "E3", "E4", "E5")
# Preparando os dados para gerar o boxplot
r1_label <- replicate(5, "A")
r2_label <- replicate(5, "B")
r3_label <- replicate(5, "C")
r4_label <- replicate(5, "D")
r1_data <- t(as.matrix(dataset_2[1,1:5]))
r2_data <- t(as.matrix(dataset_2[2,1:5]))
r3_data <- t(as.matrix(dataset_2[3,1:5]))
r4_data <- t(as.matrix(dataset_2[4,1:5]))
varied <- c(r1_data, r2_data, r3_data, r4_data)
dataset_box <- data.frame("Variedades" = c(r1_label, r2_label, r3_label, r4_label), "Dados" = c(varied))
# Gerando o boxplot
ggplot(dataset_box, aes(x=Variedades, y=Dados)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Técnicas")+
ylab("Falhas")
# Preparando os dados para gerar o boxplot
r1_label_2 <- replicate(4, "E1")
r2_label_2 <- replicate(4, "E2")
r3_label_2 <- replicate(4, "E3")
r4_label_2 <- replicate(4, "E4")
r5_label_2 <- replicate(4, "E5")
r1_data_2 <- dataset_2[1:4,1])
r2_data_2 <- dataset_2[1:4,2])
r3_data_2 <- dataset_2[1:4,3])
r4_data_2 <- dataset_2[1:4,4])
r5_data_2 <- dataset_2[1:4,5])
varied_2 <- c(r1_data_2, r2_data_2, r3_data_2, r4_data_2, r5_data_2)
dataset_box_2 <- data.frame("Variedades2" = c(r1_label_2, r2_label_2, r3_label_2, r4_label_2, r5_label_2), "Dados2" = c(varied_2))
# Gerando o boxplot
ggplot(dataset_box_2, aes(x=Variedades2, y=Dados2)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Técnicas")+
ylab("Falhas")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
# Gerando o boxplot
ggplot(dataset_box, aes(x=Variedades, y=Dados)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Técnicas")+
ylab("Falhas")
